{"version":3,"sources":["components/MarkerPopup.js","components/fire-red.png","components/LocationMarker.js","components/FireListing.js","components/Map.js","components/LoaderSpinner.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["MarkerPopup","info","acres","size","split","reverse","slice","join","Popup","className","name","contained","DefaultIcon","L","icon","iconUrl","fireIcon","iconSize","shadowSize","Marker","prototype","options","LocationMarker","lat","lng","position","FireListing","Map","center","zoom","markers","eventData","map","ev","summary","MapContainer","style","height","TileLayer","url","href","defaultProps","LoaderSpinner","type","color","width","Header","App","useState","setEventData","loading","setLoading","useEffect","a","fetch","res","json","fetchEvents","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oXAiBeA,EAbK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChBC,EAAQD,EAAKE,KAAKC,MAAM,KAAKC,UAAUC,MAAM,GAAGD,UAAUE,KAAK,KAEpE,OACE,eAACC,EAAA,EAAD,WACE,qBAAKC,UAAU,YAAf,SAA4BR,EAAKS,OACjC,+BACE,+BAAI,mDAAJ,IAAoCR,KACpC,+BAAI,kDAAJ,IAAmCD,EAAKU,UAAxC,cCZO,MAA0B,qCCOrCC,G,MAAcC,IAAEC,KAAK,CACvBC,QAASC,EAETC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,OAGnBL,IAAEM,OAAOC,UAAUC,QAAQP,KAAOF,EAGlC,IAQeU,EARQ,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,IAAKvB,EAAW,EAAXA,KAClC,OACE,cAACkB,EAAA,EAAD,CAAQM,SAAU,CAACF,EAAKC,GAAxB,SACE,cAAC,EAAD,CAAavB,KAAMA,O,MCuDVyB,ICtETC,EAAM,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,KAOfC,EAPqC,EAAhBC,UAODC,KAAI,SAACC,GAG7B,GAAoB,QAAjBA,EAAGtB,UAAkC,YAAZsB,EAAG9B,KAAoB,CACjD,MAAmB,CAAC8B,EAAGT,IAAKS,EAAGV,KAAxBC,EAAP,KAAYD,EAAZ,KACA,OACE,cAAC,EAAD,CAA8BC,IAAKA,EAAKD,IAAKA,EAAKtB,KAAM,CAAES,KAAMuB,EAAGvB,KAAMwB,QAASD,EAAGC,QAAS/B,KAAM8B,EAAG9B,KAAMQ,UAAWsB,EAAGtB,YAAtGsB,EAAGvB,UAK9B,OACE,eAACyB,EAAA,EAAD,CAAcC,MAAO,CAAEC,OAAQ,SAAWT,OAAQA,EAAQC,KAAMA,EAAhE,UACE,cAACS,EAAA,EAAD,CAEEC,IAAI,yMAHR,uBAI0B,mBAAGC,KAAK,2BAAR,2BAJ1B,wBAMGV,MASPH,EAAIc,aAAe,CACjBb,OAAQ,CACJL,IAAK,OACLC,KAAM,SAEVK,KAAM,GAGOF,Q,yBC7BAe,G,MAdO,WACpB,OACE,sBAAKjC,UAAU,iBAAf,UACE,cAAC,IAAD,CACEkC,KAAK,YACLC,MAAM,UACNP,OAAQ,IACRQ,MAAO,MAET,4DCFSC,G,MARA,WACX,OACI,wBAAQrC,UAAU,SAAlB,SACI,8DCiCGsC,MAjCf,WAEE,MAAkCC,mBAAS,IAA3C,mBAAOjB,EAAP,KAAkBkB,EAAlB,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAsBA,OApBAC,qBAAU,YAES,uCAAG,gCAAAC,EAAA,6DAClBF,GAAW,GADO,SAGAG,MAAM,4EAHN,cAGZC,EAHY,gBAMMA,EAAIC,OANV,gBAMX1B,EANW,EAMXA,QAGPmB,EAAanB,GACbqB,GAAW,GAVO,4CAAH,qDAajBM,GAEAC,QAAQC,IAAI5B,KACX,IAGD,gCACE,cAAC,EAAD,IACGmB,EAA0C,cAAC,EAAD,IAAhC,cAAC,EAAD,CAAKnB,UAAWA,QCtBpB6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a537f3c9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Popup } from \"react-leaflet\";\nimport './MarkerPopup.css';\n\nconst MarkerPopup = ({ info }) => {\n\tconst acres = info.size.split(\" \").reverse().slice(1).reverse().join(\" \");\n\t\n  return (\n    <Popup>\n      <div className=\"poup-text\">{info.name}</div>\n      <ul>\n        <li><strong>Acres burned:</strong> {acres}</li>\n        <li><strong>Containment:</strong> {info.contained}%</li>\n      </ul>\n    </Popup>\n  );\n};\nexport default MarkerPopup;\n","export default __webpack_public_path__ + \"static/media/fire-red.4112ca11.png\";","import React from \"react\";\nimport { Marker } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport MarkerPopup from \"./MarkerPopup\";\nimport fireIcon from \"./fire-red.png\";\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\n\nlet DefaultIcon = L.icon({\n  iconUrl: fireIcon,\n  //shadowUrl: iconShadow,\n  iconSize: [32, 32],\n  shadowSize: [28, 28],\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\n\nconst LocationMarker = ({ lat, lng, info }) => {\n  return (\n    <Marker position={[lat, lng]}>\n      <MarkerPopup info={info} />\n    </Marker>\n  );\n};\n\nexport default LocationMarker; \n","import React from 'react';\nimport './FireListing.css';\n\n\nlet buttonStatus = 'open';\nconst FireListing = (props) => {\n\t// console.log(props.data)\n\tlet list;\n\t//const fon = props.data.length > 0 ? props.data.filter(d => d.properties.state === 'CALIFORNIA') : [];\n\t//const fon = props.data.length > 0 ? props.data.filter(d => d.properties.state === 'CALIFORNIA') : [];\n\tconst fon = props.data.filter(d => d.properties.state === 'CALIFORNIA');\n\t//console.log(fon);\n\t// NO FON? HIDE SIDEBAR\n\tif (fon.length > 0) {\n\t\t// YES FON\n\t\t/*list = fon.sort((a,b) => {\n\t\t\t\treturn b.properties.size - a.properties.size\n\t\t\t}) */\n\t\tlist = fon.map(d => {\n\t\t\t\treturn ListItem(d.properties, props.flyToLocation);\n\t\t\t});\t\n\t} /*else {\n\t\t// hide sidebar\n\t\tlist = <li className=\"no-fires\">Currently there are no fires of note in California</li>\n\t} */\n\n\n\treturn (\n\t\t<div className=\"sidebar\">\n\t\t\t<div className=\"header2\">\n\t\t\t\t<h2>Active Fires</h2>\n\t\t\t\t<div className=\"button\">\n\t\t\t\t\t<input type=\"checkbox\" id=\"switch\" className=\"open\" onChange={toggleSidebar} /><label htmlFor=\"switch\"></label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<ul id=\"listings\" className={`listings`}>\n\t\t\t\t{list}\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nfunction ListItem(data, clickHandler) {\n\t//const size = Math.round((data.parseFloat(size)));\n\tconst size = data.size;\n\t//const size = Math.round((data.DailyAcres / 100) * 10) / 10;\n\tconst name = data.name; // data.fire_name.split(' (')[0]\n\n\t// console.log(name, data)\n\n\t//const sizeText = size > 0.1 ? `${size} acres` : 'Spot fire';\n\treturn (\n\t\t<li key={data.name} id={data.name} className=\"item\" onClick={clickHandler}>\n\t\t\t<h4 className=\"title\">{name}</h4>\n\t\t\t<p className=\"size\">{size}</p>\n\t\t\t<p className=\"location\">{data.summary}</p>\n\t\t</li>\n\t);\n}\n\nfunction toggleSidebar(e) {\n\tconsole.log(e)\n\tconst sidebar = document.getElementById('listings');\n\n\tif (buttonStatus === 'open') {\n\t\te.target.className = 'closed';\n\t\tsidebar.className = 'listings closed';\n\t\tbuttonStatus = 'closed';\n\t} else {\n\t\te.target.className = 'open';\n\t\tsidebar.className = 'listings open';\n\t\tbuttonStatus = 'open';\n\t}\n}\n\nexport default FireListing;\n","import React from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport LocationMarker from \"./LocationMarker\";\nimport FireListing from './FireListing';\n\nconst Map = ({ center, zoom, eventData }) => {\n/*  flyToLocation(e) {\n    // console.log(e.target.parentNode.id)\n    this.setState({\n      selected_feature: this.state.event.filter(d => parseInt(ev.properties.Name) === parseInt(e.target.parentNode.id))[0]\n    });\n  }; */\n  const markers = eventData.map((ev) => {\n\n   // if(ev.state === 'CALIFORNIA' | ev.state === 'OREGON' | ev.state === 'WASHINGTON' | ev.state === 'NEVADA' | ev.state === 'IDAHO' | ev.state === 'MONTANA' | ev.state === 'UTAH' | ev.state === 'ARIZONA') {\n    if(ev.contained !== \"100\" | ev.size !== \"0 Acres\") {\n      const [lng, lat] = [ev.lng, ev.lat];\n      return (\n        <LocationMarker key={ev.name} lng={lng} lat={lat} info={{ name: ev.name, summary: ev.summary, size: ev.size, contained: ev.contained}} />\n      );\n    }\n  });\n\n  return (\n    <MapContainer style={{ height: \"100vh\" }} center={center} zoom={zoom}>\n      <TileLayer\n        //url=\"https://api.mapbox.com/styles/v1/kcdeleon/ckqqdo2rq4lp519qfvfp76qiq/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1Ijoia2NkZWxlb24iLCJhIjoiY2txcWRxeDMxMjVmcjJ3bzFrNXVja2gxdSJ9.Ngo-IZUCAm3bsy4eMzoSlw\"\n        url=\"https://api.mapbox.com/styles/v1/kcdeleon/cksfbbs4x41im17pdwjb2cphd/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1Ijoia2NkZWxlb24iLCJhIjoiY2o2OG5yMTF3MGhkODMycGxnamZwaGsydiJ9._CkK8kkDpQ_88-_aiV4YMg\" />\n        //attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      //  />\n      {markers}\n    </MapContainer>\n  /*  <FireListing\n      data={this.props.eventData}\n      flyToLocation={this.props.flyToLocation}>\n    </FireListing>  */\n  );\n};\n\nMap.defaultProps = {\n  center: {\n      lat: 38.104,\n      lng: -121.542\n  },\n  zoom: 7\n}\n\nexport default Map;\n","import React from 'react'\nimport Loader from 'react-loader-spinner'\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\n\nconst LoaderSpinner = () => {\n  return (\n    <div className='loader-spinner'>\n      <Loader \n        type=\"ThreeDots\"\n        color=\"#000000\"\n        height={100}\n        width={100}\n      />\n      <h1>Fetching Fire Data...</h1>\n    </div>\n  )\n}\n\nexport default LoaderSpinner","import React from 'react';\nimport './Header.css';\n\nconst Header = () => {\n    return (\n        <header className=\"header\">\n            <h1>California wildfires map</h1>\n        </header>\n    );\n};\n\nexport default Header;","import Map from './components/Map';\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport LoaderSpinner from './components/LoaderSpinner';\nimport Header from './components/Header';\n\nfunction App() {\n  \n  const [eventData, setEventData] = useState([])\n  const [loading, setLoading] = useState(false)\n  \n  useEffect(()=>{\n    \n    const fetchEvents = async () =>{\n      setLoading(true)\n      //const res = await fetch('https://raw.githubusercontent.com/ktla5/calfire-incidents/main/incidents.json')\n      const res = await fetch('https://raw.githubusercontent.com/ktla5/us-wildfires/main/incidents.json')\n      //const res = await fetch('https://eonet.sci.gsfc.nasa.gov/api/v2.1/events')\n      //const {Incidents} = await res.json()\n      const {markers} = await res.json()\n\n      //setEventData(Incidents)\n      setEventData(markers)\n      setLoading(false)\n    }\n    \n    fetchEvents()\n\n    console.log(eventData)\n  }, [])\n\n  return (\n    <div>\n      <Header />\n      { !loading ? <Map eventData={eventData} /> : <LoaderSpinner /> }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'leaflet/dist/leaflet.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}